<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="P_SQLExpert_NoDataRet" Id="{450154a4-4cf8-48df-9380-9e4480de7665}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM P_SQLExpert_NoDataRet
//Program wykonuje komendę SQL INSERT dla przykładowej tabeli. Jeśli tabela nie istnieje tworzy ją.
VAR
	fbSQLDB					: 	FB_SQLDatabaseEvt(sNetID:='', tTimeout:=T#10S);
	fbSQLCmd 				: 	FB_SQLCommandEvt(sNetID:='', tTimeout:=T#10S);
	fbSQLResult				:	FB_SQLResultEvt(sNetID:='', tTimeout:=T#30S);
	iResult		 			:	Tc3_Database.I_TcMessage;							//Struktura, w której zapisywane są dane o stanie komunikacji z bazą
	sQuery					: 	STRING(254);
	iState					:	INT;
	// Komenda tworząca tabelę, jeśli taka o podanej nazwie nie istnieje
	sSqlCmdCreateTable		:	STRING(254)				:= 'CREATE TABLE IF NOT EXISTS "" ("ID" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "Timestamp" DATETIME, "Name" VARCHAR(80), "Value" FLOAT)';
	// Komenda dodająca rekord do tabeli
	sSqlCmdInsertInto		:	STRING(254)				:= 'INSERT INTO  (Timestamp, Name, Value) VALUES ( $'2018-01-31 14:59:27$', $'Temperature$', 21.3)';
	
	
	// Zmienne konfigurowalne przez użytkownika
	sTableName				:	STRING					:= 'TESTtable'; 			//Nazwa tabeli, do której dodajemy rekordy
	hDBID					:	UDINT := 1;											//DBID bazy danych z którą się komunikujemy
	bInsert					:	BOOL;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[CASE iState OF
	0:	//bInsert rozpoczyna program
		IF bInsert THEN
			bInsert := FALSE;
			iState := iState + 10;
		END_IF
		
	10:	//Połączenie z bazą danych
		IF fbSQLDB.Connect(hDBID) THEN
			iResult := fbSQLDB.ipTcResult;
			IF fbSQLDB.bError THEN
				iState := 99;
			ELSE
				iState := iState + 10;
			END_IF
		END_IF 
		
	20:	//Stworzenie komendy SQL - utworzenie tabeli jeśli nie istnieje
		fbSQLDB.CreateCmd(pSQLCommand := ADR(fbSQLCmd));
		IF NOT fbSQLDB.bBusy THEN
			iResult := fbSQLDB.ipTcResult;
			IF fbSQLDB.bError THEN
				iState := 99;
			ELSE
				iState := iState + 10;
				sQuery := INSERT(sSqlCmdCreateTable, sTableName, 28);
			END_IF
		END_IF
		
	30: //Przekazanie komendy i jej wykonanie
		fbSQLCmd.Execute(pSQLCmd := ADR(sQuery), cbSQLCmd := TO_UDINT(LEN(sQuery) + 1));
		IF NOT fbSQLCmd.bBusy THEN
			iResult := fbSQLCmd.ipTcResult;
			IF fbSQLCmd.bError THEN
				iState := 99;
			ELSE
				 iState := iState + 10;
			END_IF
		END_IF
		
	40:	//Stworzenie komendy SQL - wstawienie do tabeli rekordu
		fbSQLDB.CreateCmd(pSQLCommand := ADR(fbSQLCmd));
		IF NOT fbSQLDB.bBusy THEN
			iResult := fbSQLDB.ipTcResult;
			IF fbSQLDB.bError THEN
				iState := 99;
			ELSE
				iState := iState + 10;
				sQuery := INSERT(sSqlCmdInsertInto, sTableName, 12);
			END_IF
		END_IF
		
	50: //Przekazanie komendy i jej wykonanie
		fbSQLCmd.Execute(pSQLCmd := ADR(sQuery), cbSQLCmd := TO_UDINT(LEN(sQuery) + 1));
		IF NOT fbSQLCmd.bBusy THEN
			iResult := fbSQLCmd.ipTcResult;
			IF fbSQLCmd.bError THEN
				iState := 99;
			ELSE
				 iState := iState + 10;
			END_IF
		END_IF
		
	60:	//Rozłączenie się z bazą danych
		fbSQLDB.Disconnect();
		IF NOT fbSQLDB.bBusy THEN
			iResult := fbSQLDB.ipTcResult;
			IF fbSQLDB.bError THEN
				iState := 99;
			else
				iState := 0;
			END_IF
		END_IF
		
	99: // Error
		fbSQLDB.Disconnect();
		iState := 0;
END_CASE]]></ST>
    </Implementation>
    <LineIds Name="P_SQLExpert_NoDataRet">
      <LineId Id="29" Count="9" />
      <LineId Id="40" Count="10" />
      <LineId Id="52" Count="3" />
      <LineId Id="132" Count="0" />
      <LineId Id="57" Count="6" />
      <LineId Id="65" Count="5" />
      <LineId Id="133" Count="0" />
      <LineId Id="135" Count="3" />
      <LineId Id="140" Count="3" />
      <LineId Id="145" Count="1" />
      <LineId Id="134" Count="0" />
      <LineId Id="147" Count="0" />
      <LineId Id="149" Count="3" />
      <LineId Id="154" Count="4" />
      <LineId Id="148" Count="0" />
      <LineId Id="102" Count="4" />
      <LineId Id="108" Count="9" />
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>